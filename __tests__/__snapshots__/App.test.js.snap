// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  loaded={
    Array [
      0,
    ]
  }
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      Object {
        "flex": 1,
      },
    ]
  }
>
  <RCTScrollView
    alwaysBounceHorizontal={false}
    automaticallyAdjustContentInsets={false}
    bounces={false}
    contentContainerStyle={
      Object {
        "flex": 1,
      }
    }
    contentOffset={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    directionalLockEnabled={true}
    horizontal={true}
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="always"
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    overScrollMode="never"
    pagingEnabled={true}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollsToTop={false}
    showsHorizontalScrollIndicator={false}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "flex": 1,
            "overflow": "hidden",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "flex": 1,
              "overflow": "hidden",
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  },
                  Object {
                    "backgroundColor": "#000",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  collapsable={undefined}
                  pointerEvents="auto"
                  style={
                    Object {
                      "backgroundColor": "#E9E9EF",
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "black",
                      "shadowOffset": Object {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0.2,
                      "shadowRadius": 5,
                      "top": 0,
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                        Object {
                          "translateY": 0,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fff",
                        "flex": 1,
                        "justifyContent": "center",
                        "paddingTop": 20,
                      }
                    }
                  >
                    <ActivityIndicator
                      animating={true}
                      color="#999999"
                      hidesWhenStopped={true}
                      size="small"
                    />
                  </View>
                </View>
              </View>
              <View
                cardStyle={undefined}
                collapsable={undefined}
                getScreenDetails={[Function]}
                headerMode={undefined}
                index={0}
                layout={
                  Object {
                    "height": 0,
                    "initHeight": 0,
                    "initWidth": 0,
                    "isMeasured": false,
                    "width": 0,
                  }
                }
                leftInterpolator={[Function]}
                mode="float"
                navigation={
                  Object {
                    "addListener": [Function],
                    "dispatch": [Function],
                    "goBack": [Function],
                    "navigate": [Function],
                    "pop": [Function],
                    "popToTop": [Function],
                    "push": [Function],
                    "setParams": [Function],
                    "state": Object {
                      "index": 0,
                      "isTransitioning": false,
                      "key": null,
                      "params": undefined,
                      "routeName": "Hot",
                      "routes": Array [
                        Object {
                          "key": null,
                          "routeName": "Hot",
                        },
                      ],
                    },
                  }
                }
                rightInterpolator={[Function]}
                router={
                  Object {
                    "getActionForPathAndParams": [Function],
                    "getComponentForRouteName": [Function],
                    "getComponentForState": [Function],
                    "getPathAndParamsForState": [Function],
                    "getScreenConfig": [Function],
                    "getScreenOptions": [Function],
                    "getStateForAction": [Function],
                  }
                }
                titleInterpolator={[Function]}
                transitionConfig={undefined}
              >
                <View
                  collapsable={undefined}
                  onLayout={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#F7F7F7",
                      "borderBottomColor": "rgba(0, 0, 0, .3)",
                      "borderBottomWidth": 0.5,
                      "height": 64,
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 20,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          Object {
                            "flexDirection": "row",
                          },
                        ]
                      }
                    >
                      <View
                        collapsable={undefined}
                        pointerEvents="box-none"
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "bottom": 0,
                            "justifyContent": "center",
                            "left": 0,
                            "opacity": 1,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                            "transform": Array [
                              Object {
                                "translateX": 0,
                              },
                            ],
                          }
                        }
                      >
                        <Text
                          accessibilityTraits="header"
                          accessible={true}
                          allowFontScaling={true}
                          collapsable={undefined}
                          ellipsizeMode="tail"
                          numberOfLines={1}
                          onLayout={[Function]}
                          style={
                            Object {
                              "color": "rgba(0, 0, 0, .9)",
                              "fontSize": 17,
                              "fontWeight": "600",
                              "marginHorizontal": 16,
                              "textAlign": "center",
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={null}
        testID={undefined}
      />
      <View
        style={null}
        testID={undefined}
      />
      <View
        style={null}
        testID={undefined}
      />
    </View>
  </RCTScrollView>
  <View
    collapsable={undefined}
    style={undefined}
  >
    <View
      collapsable={undefined}
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "#F7F7F7",
          "borderTopColor": "rgba(0, 0, 0, .3)",
          "borderTopWidth": 0.5,
          "flexDirection": "row",
          "height": 49,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            collapsable={undefined}
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          collapsable={undefined}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "rgba(255, 99, 71, 1)",
              "fontSize": 10,
              "marginBottom": 1.5,
              "marginLeft": 0,
              "marginTop": 0,
              "textAlign": "center",
            }
          }
        >
          Hot
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            collapsable={undefined}
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          collapsable={undefined}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "rgba(128, 128, 128, 1)",
              "fontSize": 10,
              "marginBottom": 1.5,
              "marginLeft": 0,
              "marginTop": 0,
              "textAlign": "center",
            }
          }
        >
          New
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            collapsable={undefined}
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          collapsable={undefined}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "rgba(128, 128, 128, 1)",
              "fontSize": 10,
              "marginBottom": 1.5,
              "marginLeft": 0,
              "marginTop": 0,
              "textAlign": "center",
            }
          }
        >
          Top
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        >
          <View
            collapsable={undefined}
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
          <View
            collapsable={undefined}
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          collapsable={undefined}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "rgba(128, 128, 128, 1)",
              "fontSize": 10,
              "marginBottom": 1.5,
              "marginLeft": 0,
              "marginTop": 0,
              "textAlign": "center",
            }
          }
        >
          Controversial
        </Text>
      </View>
    </View>
  </View>
</View>
`;
